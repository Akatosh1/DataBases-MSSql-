USE master
GO

IF  EXISTS (
	SELECT name 
		FROM sys.databases 
		WHERE name = N'КН301_Никитенков'
)
ALTER DATABASE КН301_Никитенков set single_user with rollback immediate
GO

IF  EXISTS (
	SELECT name 
		FROM sys.databases 
		WHERE name = N'КН301_Никитенков'
)
DROP DATABASE КН301_Никитенков
GO

CREATE DATABASE КН301_Никитенков
GO

USE КН301_Никитенков
GO

IF EXISTS(
  SELECT *
    FROM sys.schemas
   WHERE name = N'Лабораторная_2'
) 
 DROP SCHEMA Лабораторная_2
GO

CREATE SCHEMA Лабораторная_2
GO

IF OBJECT_ID('КН301_Никитенков.Лабораторная_2.Справочник_регионов', 'U') IS NOT NULL
  DROP TABLE  КН301_Никитенков.Лабораторная_2.Справочник_регионов
GO

CREATE TABLE КН301_Никитенков.Лабораторная_2.Справочник_регионов
(
	Код_региона Integer, 
	Название_региона nvarchar(40) NULL
	CONSTRAINT Region_id PRIMARY KEY (Код_региона) 
)
GO

IF OBJECT_ID('КН301_Никитенков.Лабораторная_2.Коды_Номеров_регионов', 'U') IS NOT NULL
  DROP TABLE  КН301_Никитенков.Лабораторная_2.Коды_Номеров_регионов
GO

CREATE TABLE КН301_Никитенков.Лабораторная_2.Коды_Номеров_регионов
(
    Код_региона Integer,
	Основной_код_региона Integer
	CONSTRAINT Number_id PRIMARY KEY (Код_региона) 
)
GO

IF OBJECT_ID('КН301_Никитенков.Лабораторная_2.График_посещений', 'U') IS NOT NULL
  DROP TABLE  КН301_Никитенков.Лабораторная_2.График_посещений
GO

CREATE TABLE КН301_Никитенков.Лабораторная_2.График_посещений
(
    ID_записи Integer IDENTITY,
	ID_машины Integer,
	Пост_ГИБДД Integer,
	Время_проезда time(0),
	Направление_движения INTEGER,
	CONSTRAINT PK_id PRIMARY KEY (ID_записи) 
)
GO

IF OBJECT_ID('КН301_Никитенков.Лабораторная_2.Список_машин', 'U') IS NOT NULL
  DROP TABLE  КН301_Никитенков.Лабораторная_2.Список_машин
GO

CREATE TABLE КН301_Никитенков.Лабораторная_2.Список_машин
(
    ID_машины Integer IDENTITY,
	Гос_номер nvarchar(20),
    Код_региона Integer CHECK((Код_региона > 0 And Код_региона < 300) OR (Код_региона > 699 AND Код_региона < 800)), 
	Категория nvarchar(10) CHECK(Категория = N'A' OR Категория = N'B' OR Категория = N'C' OR Категория = N'D' OR Категория = N'M'),
	CONSTRAINT PK_номер PRIMARY KEY (Гос_номер)
)
GO


CREATE TRIGGER Правильность_вводимых_данных_машины ON Лабораторная_2.Список_машин INSTEAD OF INSERT
AS
BEGIN
--ОГРАНИЧЕНИЕ НА НОМЕРНОЙ ЗНАК
IF ((SELECT COUNT(*) 
	FROM inserted 
	WHERE Гос_номер LIKE N'[АВСЕНКМОРТХУABCDEFGHIGKLMNOPQRSTUVWXYZ][0123456789][0123456789][0123456789][АВСЕНКМОРТХУABCDEFGHIGKLMNOPQRSTUVWXYZ][АВСЕНКМОРТХУABCDEFGHIGKLMNOPQRSTUVWXYZ][0123456789][0123456789][0123456789]') = 0
	AND 
	(SELECT COUNT(*) 
	FROM inserted 
	WHERE Гос_номер LIKE N'[АВСЕНКМОРТХУABCDEFGHIGKLMNOPQRSTUVWXYZ][0123456789][0123456789][0123456789][АВСЕНКМОРТХУABCDEFGHIGKLMNOPQRSTUVWXYZ][АВСЕНКМОРТХУABCDEFGHIGKLMNOPQRSTUVWXYZ][0123456789][0123456789]') = 0)
	    BEGIN
	        RAISERROR(N'Неверный формат Гос номера', 10, 1)
			ROLLBACK
		END
	ELSE
	    BEGIN
		    INSERT INTO Список_машин(Гос_номер, Код_региона, Категория) SELECT Гос_номер, SUBSTRING(Гос_номер, 7, 3), Категория FROM inserted
		END
END
GO


CREATE TRIGGER Правильность_вводимых_данных ON  Лабораторная_2.График_посещений INSTEAD OF INSERT 
AS
BEGIN  
	   --ОГРАНИЧЕНИЕ НА ВРЕМЯ
    IF((SELECT COUNT(*) 
	FROM inserted, График_посещений 
	WHERE inserted.ID_машины = График_посещений.ID_машины 
	AND DATEDIFF(SECOND, График_посещений.Время_проезда, inserted.Время_проезда) > 300) 
	=
	(SELECT COUNT(*) 
	FROM inserted, График_посещений
	WHERE inserted.ID_машины = График_посещений.ID_машины))
	    BEGIN
	        --ОГРАНИЧЕНИЕ НА НАПРАВЛЕНИЕ ДВИЖЕНИЯ
		    IF ((SELECT TOP 1 График_посещений.Направление_движения
		    FROM inserted, График_посещений
			WHERE inserted.ID_машины = График_посещений.ID_машины
			ORDER BY График_посещений.ID_записи DESC) = (SELECT inserted.Направление_движения FROM inserted ))
				BEGIN
			        RAISERROR(N'Нелья два раза подряд вьехать и выехать', 10, 1)
			            ROLLBACK				  
					END
			ELSE
			    BEGIN
					INSERT INTO График_посещений(Пост_ГИБДД, ID_машины, Время_проезда, Направление_движения) SELECT Пост_ГИБДД, ID_машины, Время_проезда, Направление_движения FROM inserted
				END
		END
	ELSE
		BEGIN
			RAISERROR(N'Слишком маленький интервал между проездами', 10, 1)
			ROLLBACK
		END
END
GO

--ПРОВЕРКИ НА НОМЕР

--НЕПРАВИЛЬНЫЙ НОМЕР В ЦЕЛОМ
--INSERT INTO Лабораторная_2.Список_машин(Гос_номер, Категория) VALUES (N'A124BC1', N'A')
--НЕПРАВИЛЬНЫЙ НОМЕР РЕГИОНА
--INSERT INTO Лабораторная_2.Список_машин(Гос_номер, Категория) VALUES (N'A124BC999', N'A')
--НЕПРАВИЛЬНАЯ КАТЕГОРИЯ
--INSERT INTO Лабораторная_2.Список_машин(Гос_номер, Категория) VALUES (N'A125BC66', N'Y')

--ПРОВЕРКИ НА ВРЕМЯ И ВЬЕЗД ВЫЕЗД

--ПЫТАЕМСЯ ДВА РАЗА ВЬЕХАТЬ
--INSERT INTO Лабораторная_2.График_посещений(Пост_ГИБДД, ID_машины, Время_проезда, Направление_движения) VALUES (1, 1, N'19:26:12', 1)
--INSERT INTO Лабораторная_2.График_посещений(Пост_ГИБДД, ID_машины, Время_проезда, Направление_движения) VALUES (1, 1, N'19:38:13', 1)
--ПЫТАЕМСЯ ДВА РАЗА ВЫЕХАТЬ
--INSERT INTO Лабораторная_2.График_посещений(Пост_ГИБДД, ID_машины, Время_проезда, Направление_движения) VALUES (1, 1, N'19:23:11', 2)
--INSERT INTO Лабораторная_2.График_посещений(Пост_ГИБДД, ID_машины, Время_проезда, Направление_движения) VALUES (1, 1, N'19:40:11', 2)
--ПЫТАЕМСЯ ВЬЕХАТЬ ВЫЕХАТЬ И СНОВА ВЫЕХАТЬ
--INSERT INTO Лабораторная_2.График_посещений(Пост_ГИБДД, ID_машины, Время_проезда, Направление_движения) VALUES (1, 1, N'19:23:11', 1)
--INSERT INTO Лабораторная_2.График_посещений(Пост_ГИБДД, ID_машины, Время_проезда, Направление_движения) VALUES (1, 1, N'19:30:11', 2)
--INSERT INTO Лабораторная_2.График_посещений(Пост_ГИБДД, ID_машины, Время_проезда, Направление_движения) VALUES (1, 1, N'19:40:11', 2)
--ПЫТАЕМСЯ НАРУШИТЬ ТАЙМАУТ
--INSERT INTO Лабораторная_2.График_посещений(Пост_ГИБДД, ID_машины, Время_проезда, Направление_движения) VALUES (1, 1, N'19:23:11', 1)
--INSERT INTO Лабораторная_2.График_посещений(Пост_ГИБДД, ID_машины, Время_проезда, Направление_движения) VALUES (1, 1, N'19:24:11', 2)

--МАШИНА ДЛЯ ТЕСТОВ
INSERT INTO Лабораторная_2.Список_машин(Гос_номер, Категория) VALUES (N'A123BC66', N'A')

INSERT INTO Лабораторная_2.Список_машин(Гос_номер, Категория) VALUES (N'A124BC196', N'A')
INSERT INTO Лабораторная_2.Список_машин(Гос_номер, Категория) VALUES (N'C522NM93', N'B')
INSERT INTO Лабораторная_2.Список_машин(Гос_номер, Категория) VALUES (N'A256IU150', N'C')
INSERT INTO Лабораторная_2.Список_машин(Гос_номер, Категория) VALUES (N'B995RV222', N'D')
INSERT INTO Лабораторная_2.Список_машин(Гос_номер, Категория) VALUES (N'E345TN54', N'M')

INSERT INTO Лабораторная_2.Список_машин(Гос_номер, Категория) VALUES (N'A247BC96', N'B')
INSERT INTO Лабораторная_2.Список_машин(Гос_номер, Категория) VALUES (N'C143NM759', N'A')
INSERT INTO Лабораторная_2.Список_машин(Гос_номер, Категория) VALUES (N'A255IU123', N'C')
INSERT INTO Лабораторная_2.Список_машин(Гос_номер, Категория) VALUES (N'B996RV22', N'D')
INSERT INTO Лабораторная_2.Список_машин(Гос_номер, Категория) VALUES (N'E348TN754', N'M')

INSERT INTO Лабораторная_2.Список_машин(Гос_номер, Категория) VALUES (N'A194BC90', N'A')
INSERT INTO Лабораторная_2.Список_машин(Гос_номер, Категория) VALUES (N'C521NM122', N'B')
INSERT INTO Лабораторная_2.Список_машин(Гос_номер, Категория) VALUES (N'A254IU66', N'C')
INSERT INTO Лабораторная_2.Список_машин(Гос_номер, Категория) VALUES (N'B995RV96', N'D')
INSERT INTO Лабораторная_2.Список_машин(Гос_номер, Категория) VALUES (N'E345TN150', N'M')


INSERT INTO Лабораторная_2.График_посещений(Пост_ГИБДД, ID_машины, Время_проезда, Направление_движения) VALUES (1, 2, N'19:23:11', 1)
INSERT INTO Лабораторная_2.График_посещений(Пост_ГИБДД, ID_машины, Время_проезда, Направление_движения) VALUES (2, 3, N'19:25:12', 1)
INSERT INTO Лабораторная_2.График_посещений(Пост_ГИБДД, ID_машины, Время_проезда, Направление_движения) VALUES (2, 3, N'19:30:13', 2)
INSERT INTO Лабораторная_2.График_посещений(Пост_ГИБДД, ID_машины, Время_проезда, Направление_движения) VALUES (5, 2, N'19:29:14', 2)
INSERT INTO Лабораторная_2.График_посещений(Пост_ГИБДД, ID_машины, Время_проезда, Направление_движения) VALUES (3, 4, N'19:30:15', 2)
INSERT INTO Лабораторная_2.График_посещений(Пост_ГИБДД, ID_машины, Время_проезда, Направление_движения) VALUES (3, 4, N'19:40:16', 1)
INSERT INTO Лабораторная_2.График_посещений(Пост_ГИБДД, ID_машины, Время_проезда, Направление_движения) VALUES (1, 5, N'21:29:17', 1)
INSERT INTO Лабораторная_2.График_посещений(Пост_ГИБДД, ID_машины, Время_проезда, Направление_движения) VALUES (2, 5, N'22:41:18', 2)
INSERT INTO Лабораторная_2.График_посещений(Пост_ГИБДД, ID_машины, Время_проезда, Направление_движения) VALUES (5, 6, N'20:10:19', 1)
INSERT INTO Лабораторная_2.График_посещений(Пост_ГИБДД, ID_машины, Время_проезда, Направление_движения) VALUES (5, 6, N'23:29:10', 2)
INSERT INTO Лабораторная_2.График_посещений(Пост_ГИБДД, ID_машины, Время_проезда, Направление_движения) VALUES (1, 7, N'11:10:19', 1)
INSERT INTO Лабораторная_2.График_посещений(Пост_ГИБДД, ID_машины, Время_проезда, Направление_движения) VALUES (1, 7, N'14:29:10', 2)
INSERT INTO Лабораторная_2.График_посещений(Пост_ГИБДД, ID_машины, Время_проезда, Направление_движения) VALUES (2, 8, N'16:10:19', 1)
INSERT INTO Лабораторная_2.График_посещений(Пост_ГИБДД, ID_машины, Время_проезда, Направление_движения) VALUES (3, 8, N'17:29:10', 2)
INSERT INTO Лабораторная_2.График_посещений(Пост_ГИБДД, ID_машины, Время_проезда, Направление_движения) VALUES (5, 9, N'05:10:19', 1)
INSERT INTO Лабораторная_2.График_посещений(Пост_ГИБДД, ID_машины, Время_проезда, Направление_движения) VALUES (5, 9, N'06:29:10', 2)
INSERT INTO Лабораторная_2.График_посещений(Пост_ГИБДД, ID_машины, Время_проезда, Направление_движения) VALUES (1, 10, N'10:10:19', 1)
INSERT INTO Лабораторная_2.График_посещений(Пост_ГИБДД, ID_машины, Время_проезда, Направление_движения) VALUES (2, 10, N'13:29:10', 2)
INSERT INTO Лабораторная_2.График_посещений(Пост_ГИБДД, ID_машины, Время_проезда, Направление_движения) VALUES (5, 11, N'15:11:19', 2)
INSERT INTO Лабораторная_2.График_посещений(Пост_ГИБДД, ID_машины, Время_проезда, Направление_движения) VALUES (5, 11, N'18:25:10', 1)
INSERT INTO Лабораторная_2.График_посещений(Пост_ГИБДД, ID_машины, Время_проезда, Направление_движения) VALUES (5, 12, N'17:00:19', 2)
INSERT INTO Лабораторная_2.График_посещений(Пост_ГИБДД, ID_машины, Время_проезда, Направление_движения) VALUES (5, 12, N'23:01:10', 1)
INSERT INTO Лабораторная_2.График_посещений(Пост_ГИБДД, ID_машины, Время_проезда, Направление_движения) VALUES (4, 13, N'20:09:19', 1)
INSERT INTO Лабораторная_2.График_посещений(Пост_ГИБДД, ID_машины, Время_проезда, Направление_движения) VALUES (5, 13, N'23:02:10', 2)
INSERT INTO Лабораторная_2.График_посещений(Пост_ГИБДД, ID_машины, Время_проезда, Направление_движения) VALUES (5, 14, N'20:08:19', 1)
INSERT INTO Лабораторная_2.График_посещений(Пост_ГИБДД, ID_машины, Время_проезда, Направление_движения) VALUES (5, 14, N'23:03:10', 2)
INSERT INTO Лабораторная_2.График_посещений(Пост_ГИБДД, ID_машины, Время_проезда, Направление_движения) VALUES (5, 15, N'20:07:19', 1)
INSERT INTO Лабораторная_2.График_посещений(Пост_ГИБДД, ID_машины, Время_проезда, Направление_движения) VALUES (5, 15, N'23:06:10', 2)
INSERT INTO Лабораторная_2.График_посещений(Пост_ГИБДД, ID_машины, Время_проезда, Направление_движения) VALUES (5, 16, N'20:05:19', 1)
INSERT INTO Лабораторная_2.График_посещений(Пост_ГИБДД, ID_машины, Время_проезда, Направление_движения) VALUES (5, 16, N'23:04:10', 2)





INSERT INTO Лабораторная_2.Коды_Номеров_регионов(Код_региона, Основной_код_региона) VALUES (66, 66)
INSERT INTO Лабораторная_2.Коды_Номеров_регионов(Код_региона, Основной_код_региона) VALUES (96, 66)
INSERT INTO Лабораторная_2.Коды_Номеров_регионов(Код_региона, Основной_код_региона) VALUES (196, 66)
INSERT INTO Лабораторная_2.Коды_Номеров_регионов(Код_региона, Основной_код_региона) VALUES (50, 50)
INSERT INTO Лабораторная_2.Коды_Номеров_регионов(Код_региона, Основной_код_региона) VALUES (90, 50)
INSERT INTO Лабораторная_2.Коды_Номеров_регионов(Код_региона, Основной_код_региона) VALUES (150, 50)
INSERT INTO Лабораторная_2.Коды_Номеров_регионов(Код_региона, Основной_код_региона) VALUES (190, 50)
INSERT INTO Лабораторная_2.Коды_Номеров_регионов(Код_региона, Основной_код_региона) VALUES (759, 50)
INSERT INTO Лабораторная_2.Коды_Номеров_регионов(Код_региона, Основной_код_региона) VALUES (790, 50)
INSERT INTO Лабораторная_2.Коды_Номеров_регионов(Код_региона, Основной_код_региона) VALUES (54, 54)
INSERT INTO Лабораторная_2.Коды_Номеров_регионов(Код_региона, Основной_код_региона) VALUES (154, 54)
INSERT INTO Лабораторная_2.Коды_Номеров_регионов(Код_региона, Основной_код_региона) VALUES (754, 54)
INSERT INTO Лабораторная_2.Коды_Номеров_регионов(Код_региона, Основной_код_региона) VALUES (22, 22)
INSERT INTO Лабораторная_2.Коды_Номеров_регионов(Код_региона, Основной_код_региона) VALUES (122, 22)
INSERT INTO Лабораторная_2.Коды_Номеров_регионов(Код_региона, Основной_код_региона) VALUES (222, 22)
INSERT INTO Лабораторная_2.Коды_Номеров_регионов(Код_региона, Основной_код_региона) VALUES (23, 23)
INSERT INTO Лабораторная_2.Коды_Номеров_регионов(Код_региона, Основной_код_региона) VALUES (93, 23)
INSERT INTO Лабораторная_2.Коды_Номеров_регионов(Код_региона, Основной_код_региона) VALUES (123, 23)
INSERT INTO Лабораторная_2.Коды_Номеров_регионов(Код_региона, Основной_код_региона) VALUES (193, 23)


INSERT INTO Лабораторная_2.Справочник_регионов(Код_региона, Название_региона) VALUES (66, N'Свердловская область')
INSERT INTO Лабораторная_2.Справочник_регионов(Код_региона, Название_региона) VALUES (50, N'Московская область')
INSERT INTO Лабораторная_2.Справочник_регионов(Код_региона, Название_региона) VALUES (54, N'Новосибирская область')
INSERT INTO Лабораторная_2.Справочник_регионов(Код_региона, Название_региона) VALUES (22, N'Алтайский край')
INSERT INTO Лабораторная_2.Справочник_регионов(Код_региона, Название_региона) VALUES (23, N'Краснодарский край')

GO

/*SELECT * FROM Лабораторная_2.Список_машин
SELECT * FROM Лабораторная_2.График_посещений
SELECT * FROM Лабораторная_2.Справочник_регионов
SELECT * FROM Лабораторная_2.Номера_регионов
GO*/

--Все
CREATE VIEW Все_записи AS
SELECT машина.ID_машины, 
       машина.Гос_номер AS Гос_номер, 
	   машина.Категория,
	   код_региона_машины.Код_региона, 
	   Основной_код_региона,
	   номер_региона_машины.Название_региона AS Название_региона, 
	   запись_прибытия.Пост_ГИБДД AS Пост_прибытия, 
	   запись_отбытия.Пост_ГИБДД AS Пост_отбытия,
	   время_прибытия.Время_проезда AS Время_прибытия,
	   время_отбытия.Время_проезда  AS Время_отбытия
FROM 
    Лабораторная_2.График_посещений AS запись_прибытия INNER JOIN
	Лабораторная_2.График_посещений AS запись_отбытия ON  запись_прибытия.ID_машины = запись_отбытия.ID_машины INNER JOIN
    Лабораторная_2.Список_машин AS машина ON запись_прибытия.ID_машины = машина.ID_машины INNER JOIN
    Лабораторная_2.Коды_Номеров_регионов AS код_региона_машины ON машина.Код_региона = код_региона_машины.Код_региона INNER JOIN 
	Лабораторная_2.Справочник_регионов AS номер_региона_машины ON  номер_региона_машины.Код_региона = код_региона_машины.Основной_код_региона INNER JOIN
	Лабораторная_2.График_посещений AS время_прибытия ON время_прибытия.Время_проезда = запись_прибытия.Время_проезда INNER JOIN
	Лабораторная_2.График_посещений AS время_отбытия ON время_отбытия.Время_проезда = запись_отбытия.Время_проезда
WHERE NOT (запись_прибытия.ID_записи = запись_отбытия.ID_записи) AND запись_прибытия.Направление_движения = 1 
GO

--Транзитные
CREATE VIEW Транзитные AS 
SELECT * FROM Все_записи
WHERE NOT (Пост_прибытия = Пост_отбытия) AND NOT(Основной_код_региона = 66) AND (Время_прибытия < Время_отбытия)
GO

--Иногородние
CREATE VIEW Иногородние AS 
SELECT * FROM Все_записи
WHERE Все_записи.Пост_прибытия = Все_записи.Пост_отбытия AND (Время_прибытия > Время_отбытия)
GO

--Местные
CREATE VIEW Местные AS 
SELECT * FROM Все_записи
WHERE (Время_прибытия < Время_отбытия) AND (Основной_код_региона = 66)
GO
--Прочие
 CREATE VIEW Прочие AS
 SELECT * FROM Все_записи
 WHERE NOT ((Время_прибытия < Время_отбытия) AND (Основной_код_региона = 66)) 
      AND NOT (Все_записи.Пост_прибытия = Все_записи.Пост_отбытия AND (Время_прибытия > Время_отбытия))
	  AND NOT(NOT (Пост_прибытия = Пост_отбытия) AND NOT(Основной_код_региона = 66) AND (Время_прибытия < Время_отбытия))
 GO


 /*SELECT * FROM Все_записи ORDER BY ID_машины
 SELECT * FROM Транзитные ORDER BY ID_машины
 SELECT * FROM Иногородние ORDER BY ID_машины*/
 --SELECT * FROM Местные --ORDER BY ID_машины
 --SELECT * FROM Прочие ORDER BY ID_машины
 GO