USE master
GO

IF  EXISTS (
	SELECT name 
		FROM sys.databases 
		WHERE name = N'КН301_Никитенков'
)
ALTER DATABASE КН301_Никитенков set single_user with rollback immediate
GO

IF  EXISTS (
	SELECT name 
		FROM sys.databases 
		WHERE name = N'КН301_Никитенков'
)
DROP DATABASE КН301_Никитенков
GO

CREATE DATABASE КН301_Никитенков
GO

USE КН301_Никитенков
GO

IF EXISTS(
  SELECT *
    FROM sys.schemas
   WHERE name = N'Лабораторная_3'
) 
 DROP SCHEMA Лабораторная_3
GO

CREATE SCHEMA Лабораторная_3
GO


IF OBJECT_ID('КН301_Никитенков.Лабораторная_3.Кошелек', 'U') IS NOT NULL
  DROP TABLE  КН301_Никитенков.Лабораторная_3.Кошелек
GO

CREATE TABLE КН301_Никитенков.Лабораторная_3.Кошелек
(
    ID_Валюты nvarchar(40) NOT NULL,
	Количество_валюты FLOAT
	CONSTRAINT VAL_id PRIMARY KEY (ID_Валюты) 
)
GO

IF OBJECT_ID('КН301_Никитенков.Лабораторная_3.Валюты', 'U') IS NOT NULL
  DROP TABLE  КН301_Никитенков.Лабораторная_3.Валюты
GO

CREATE TABLE КН301_Никитенков.Лабораторная_3.Валюты
(
	ID_Валюты Integer IDENTITY, 
	Название_Валюты NVARCHAR(40) NOT NULL
)
GO

IF OBJECT_ID('КН301_Никитенков.Лабораторная_3.Обменные_Курсы', 'U') IS NOT NULL
  DROP TABLE  КН301_Никитенков.Лабораторная_3.Обменные_Курсы
GO

CREATE TABLE КН301_Никитенков.Лабораторная_3.Обменные_Курсы
(
	ID_продаваемой_валюты Integer, 
	ID_покупаемой_валюты Integer,
	Курс FLOAT
)
GO

CREATE TRIGGER Правильность_вводимых_данных_1 ON Лабораторная_3.Обменные_Курсы INSTEAD OF INSERT
AS
BEGIN
IF NOT ((SELECT COUNT(*) 
     FROM inserted, Обменные_Курсы
	 WHERE inserted.ID_покупаемой_валюты = Обменные_Курсы.ID_покупаемой_валюты
	 AND inserted.ID_продаваемой_валюты = Обменные_Курсы.ID_продаваемой_валюты
	 AND inserted.Курс = Обменные_Курсы.Курс) = 0)
	 BEGIN
	     RAISERROR(N'Повторная запись', 10, 1)
		 ROLLBACK
	 END
ELSE
BEGIN
    INSERT INTO Лабораторная_3.Обменные_Курсы(ID_продаваемой_валюты, ID_покупаемой_валюты, Курс) 
	SELECT ID_продаваемой_валюты, ID_покупаемой_валюты, Курс FROM inserted
END
END
GO

CREATE TRIGGER Правильность_вводимых_данных_2 ON Лабораторная_3.Кошелек INSTEAD OF UPDATE
AS 
BEGIN
IF((SELECT Количество_валюты FROM inserted) < 0)
    BEGIN
	    RAISERROR(N'Нет столько валюты на счете', 10, 1)
		ROLLBACK
	END
ELSE
    BEGIN
	    UPDATE Лабораторная_3.Кошелек SET Количество_валюты = (SELECT Количество_валюты FROM inserted)WHERE ID_Валюты = (SELECT ID_Валюты FROM inserted)
	END
END
GO

INSERT INTO Лабораторная_3.Кошелек(ID_Валюты, Количество_валюты) VALUES
    (1, 10.21), (2, 20.301), (3, 40.500), (4, 200.987), (5, 500.43), (6, 34.56), (7, 42.91)
GO

INSERT INTO Лабораторная_3.Валюты(Название_Валюты) VALUES 
    (N'USD'), (N'GBP'), (N'JPY'), (N'CHF'), (N'CAD'), (N'DKK'), (N'SEK')
GO


INSERT INTO Лабораторная_3.Обменные_Курсы(ID_продаваемой_валюты, ID_покупаемой_валюты, Курс) VALUES 
(1, 1, 1), (1, 2, 0.623), (1, 3, 78.065), (1, 4, 0.9011), (1, 5, 1.0134), (1, 6, 5.4064), (1, 7, 6.562),
(2, 1, 1.6052), (2, 2, 1), (2, 3, 125.31), (2, 4, 1.4467), (2, 5, 1.6268), (2, 6, 8.6788), (2, 7, 10.5285),
(3, 1, 0.0128), (3, 2, 0.008), (3, 3, 1), (3, 4, 0.0115), (3, 5, 0.013), (3, 6, 0.0692), (3, 7, 8.4),
(4, 1, 1.1098), (4, 2, 0.6912), (4, 3, 86.6275), (4, 4, 1), (4, 5, 1.1246), (4, 6, 0.06), (4, 7, 7.2825),
(5, 1, 0.9868), (5, 2, 0.6147), (5, 3, 77.0345), (5, 4, 0.8892), (5, 5, 1), (5, 6, 5.335), (5, 7, 6.4754),
(6, 1, 0.185), (6, 2, 0.1152), (6, 3, 14.442), (6, 4, 16.67), (6, 5, 0.1874), (6, 6, 1), (6, 7, 1.2137),
(7, 1, 0.1524), (7, 2, 0.095), (7, 3, 0.119), (7, 4, 0.1373), (7, 5, 0.1544), (7, 6, 0.8239), (7, 7, 1)
GO

GO

CREATE PROCEDURE Добавление_В_Кошелек
@валюта nvarchar(10) , 
@количество FLOAT,
@новое_значение FLOAT OUTPUT
AS
BEGIN
    DECLARE @id_валюты INTEGER
	SET @id_валюты = (SELECT ID_Валюты FROM Лабораторная_3.Валюты AS валюты WHERE валюты.Название_Валюты = @валюта)
    SET @новое_значение = 
	(
	SELECT кошелек.Количество_валюты + @количество
	FROM 
	Лабораторная_3.Кошелек AS кошелек INNER JOIN
	Лабораторная_3.Валюты AS валюты ON кошелек.ID_Валюты = валюты.ID_Валюты AND валюты.Название_Валюты = @валюта
	)
	UPDATE Лабораторная_3.Кошелек SET Количество_валюты = @новое_значение WHERE ID_Валюты = @id_валюты
END
GO

CREATE PROCEDURE Выемка_валюты
@валюта nvarchar(10) , 
@количество FLOAT,
@новое_значение FLOAT OUTPUT
AS
BEGIN
    DECLARE @id_валюты INTEGER
	SET @id_валюты = (SELECT ID_Валюты FROM Лабораторная_3.Валюты AS валюты WHERE валюты.Название_Валюты = @валюта)
    SET @новое_значение = 
	(
	SELECT кошелек.Количество_валюты - @количество
	FROM 
	Лабораторная_3.Кошелек AS кошелек INNER JOIN
	Лабораторная_3.Валюты AS валюты ON кошелек.ID_Валюты = валюты.ID_Валюты AND валюты.Название_Валюты = @валюта
	)
	UPDATE Лабораторная_3.Кошелек SET Количество_валюты = @новое_значение WHERE ID_Валюты = @id_валюты
END
GO

CREATE VIEW Содержимое_кошелька AS
SELECT валюты.Название_Валюты, Количество_валюты  
     FROM Лабораторная_3.Кошелек AS Кошелек INNER JOIN
	      Лабораторная_3.Валюты AS валюты ON валюты.ID_Валюты = Кошелек.ID_Валюты
     WHERE Кошелек.Количество_валюты > 0
GO

/*SELECT * FROM Содержимое_кошелька
DECLARE @a FLOAT
EXECUTE dbo.Добавление_В_Кошелек 'JPY', 100 , @a
SELECT * FROM Содержимое_кошелька
DECLARE @b FLOAT
EXECUTE dbo.Выемка_валюты 'JPY', 100, @b
SELECT * FROM Содержимое_кошелька
GO*/

CREATE FUNCTION Сумма_Кошелька
(@валюта nvarchar(10))
RETURNS FLOAT
BEGIN
DECLARE @сумма FLOAT
    SET @сумма = 
    (
    SELECT SUM(Количество_валюты * обменные_курсы.Курс)
    FROM 
    Лабораторная_3.Кошелек AS кошелек INNER JOIN
	Лабораторная_3.Обменные_Курсы AS обменные_курсы ON обменные_курсы.ID_покупаемой_валюты = кошелек.ID_Валюты INNER JOIN
	Лабораторная_3.Валюты AS валюты ON обменные_курсы.ID_продаваемой_валюты = валюты.ID_Валюты AND валюты.Название_Валюты = @валюта
    )
RETURN @сумма
END
GO


--SELECT  dbo.Сумма_Кошелька('JPY') AS Сумма_в_JPY
--GO


--SELECT * FROM Содержимое_кошелька


declare @названия varchar(100)

SET @названия = (SELECT STRING_AGG('['+ Название_Валюты + ']', ', ') FROM Лабораторная_3.Валюты)


declare @table varchar(1000)
SET @table = 'Select продаваемая_валюта AS VAL , ' + 
@названия + 
'FROM (
SELECT продаваемая_валюта.Название_Валюты as продаваемая_валюта, 
        покупаемая_валюта.Название_Валюты as покупаемая_валюта,
	    обменные_курсы.Курс as курс,
		продаваемая_валюта.ID_Валюты as id
FROM 
Лабораторная_3.Обменные_Курсы AS обменные_курсы INNER JOIN
Лабораторная_3.Валюты AS продаваемая_валюта ON  обменные_курсы.ID_продаваемой_валюты = продаваемая_валюта.ID_Валюты INNER JOIN 
Лабораторная_3.Валюты AS покупаемая_валюта ON  обменные_курсы.ID_покупаемой_валюты = покупаемая_валюта.ID_Валюты
) 
up
PIVOT(SUM(курс) FOR покупаемая_валюта IN 
('
+ @названия
+ 
')) AS test
Order by id'


Exec(@table)

